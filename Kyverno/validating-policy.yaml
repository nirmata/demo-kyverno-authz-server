apiVersion: policies.kyverno.io/v1alpha1
kind: ValidatingPolicy
metadata:
  name: jwt-validation
  namespace: app
spec:
  failurePolicy: Fail
  evaluation:
    mode: Envoy
  variables:
  # JWKS endpoint (adjust for your IdP)
  - name: token_issuer
    expression: string('http://keycloak.keycloak.svc.cluster.local:8080/realms/demo-realm/protocol/openid-connect/certs')
  
  # Fetch public keys for JWT validation
  - name: certs
    expression: jwks.Fetch(variables.token_issuer)
  
  # Extract Authorization header
  - name: authorization
    expression: object.attributes.request.http.headers[?"authorization"].orValue("").split(" ")
  
  # Parse and validate JWT token
  - name: token
    expression: >
      size(variables.authorization) == 2 &&
      variables.authorization[0].lowerAscii() == "bearer"
        ? jwt.Decode(variables.authorization[1], variables.certs)
        : null
  
  validations:
  # Rule 1: Require valid JWT token
  - expression: >
      variables.token == null || !variables.token.Valid
        ? envoy.Denied(401).Response()
        : null
  
  # Rule 2: Block access to /get/* unless in admin group
  - expression: >
      object.attributes.request.http.path.startsWith("/get") &&
      !("platform-admins" in variables.token.Claims.groups)
        ? envoy.Denied(403).Response()
        : null
